### Classic matplotlib plotting style as of v1.5



### LINES
# See https://matplotlib.org/api/artist_api.html#module-matplotlib.lines for more
# information on line properties.
lines.linewidth: 2               # line width in points
lines.linestyle: -                 # solid line
lines.color:     C0                # has no affect on plot(); see axes.prop_cycle
lines.marker:          None        # the default marker
lines.markerfacecolor: auto        # the default marker face color
lines.markeredgecolor: auto        # the default marker edge color
lines.markeredgewidth: 1.0         # the line width around the marker symbol
lines.markersize:      6           # marker size, in points
lines.dash_joinstyle:  round       # {miter, round, bevel}
lines.dash_capstyle:   butt        # {butt, round, projecting}
lines.solid_joinstyle: round       # {miter, round, bevel}
lines.solid_capstyle:  projecting  # {butt, round, projecting}
lines.antialiased: True            # render lines in antialiased (no jaggies)
lines.dashed_pattern: 3.7, 1.6
lines.dashdot_pattern: 6.4, 1.6, 1, 1.6
lines.dotted_pattern: 1, 1.65
lines.scale_dashes: True

### Marker props
markers.fillstyle: full

### PATCHES
# Patches are graphical objects that fill 2D space, like polygons or
# circles.  See
# https://matplotlib.org/api/artist_api.html#module-matplotlib.patches
# information on patch properties
patch.linewidth:       1.0    # edge width in points.
patch.facecolor:       C0
patch.edgecolor:       black  # if forced, or patch is not filled
patch.force_edgecolor: False  # True to always use edgecolor
patch.antialiased:     True   # render patches in antialiased (no jaggies)

hatch.color:     black
hatch.linewidth: 1.0

hist.bins              : 20

### FONT
#
# font properties used by text.Text.  See
# https://matplotlib.org/api/font_manager_api.html for more
# information on font properties.  The 6 font properties used for font
# matching are given below with their default values.
#
# The font.family property has five values: 'serif' (e.g., Times),
# 'sans-serif' (e.g., Helvetica), 'cursive' (e.g., Zapf-Chancery),
# 'fantasy' (e.g., Western), and 'monospace' (e.g., Courier).  Each of
# these font families has a default list of font names in decreasing
# order of priority associated with them.  When text.usetex is False,
# font.family may also be one or more concrete font names.
#
# The font.style property has three values: normal (or roman), italic
# or oblique.  The oblique style will be used for italic, if it is not
# present.
#
# The font.variant property has two values: normal or small-caps.  For
# TrueType fonts, which are scalable fonts, small-caps is equivalent
# to using a font size of 'smaller', or about 83% of the current font
# size.
#
# The font.weight property has effectively 13 values: normal, bold,
# bolder, lighter, 100, 200, 300, ..., 900.  Normal is the same as
# 400, and bold is 700.  bolder and lighter are relative values with
# respect to the current weight.
#
# The font.stretch property has 11 values: ultra-condensed,
# extra-condensed, condensed, semi-condensed, normal, semi-expanded,
# expanded, extra-expanded, ultra-expanded, wider, and narrower.  This
# property is not currently implemented.
#
# The font.size property is the default font size for text, given in pts.
# 12pt is the standard value.
#
font.family         : sans-serif
font.style          : normal
font.variant        : normal
font.weight         : normal
font.stretch        : normal
# note that font.size controls default text sizes.  To configure
# special text sizes tick labels, axes, labels, title, etc, see the rc
# settings for axes and ticks. Special text sizes can be defined
# relative to font.size, using the following values: xx-small, x-small,
# small, medium, large, x-large, xx-large, larger, or smaller
font.size           : 14.0
font.serif     : DejaVu Serif, New Century Schoolbook, Century Schoolbook L, Utopia, ITC Bookman, Bookman, Nimbus Roman No9 L, Times New Roman, Times, Palatino, Charter, serif
font.sans-serif: Helvetica, DejaVu Sans, Lucida Grande, Verdana, Geneva, Lucid, Arial, Avant Garde, sans-serif
font.cursive   : Apple Chancery, Textile, Zapf Chancery, Sand, Script MT, Felipa, cursive
font.fantasy   : Comic Sans MS, Chicago, Charcoal, ImpactWestern, Humor Sans, fantasy
font.monospace : DejaVu Sans Mono, Andale Mono, Nimbus Mono L, Courier New, Courier, Fixed, Terminal, monospace

### TEXT
# text properties used by text.Text.  See
# https://matplotlib.org/api/artist_api.html#module-matplotlib.text for more
# information on text properties

text.color          : k

### AXES
axes.facecolor:     white   # axes background color
axes.edgecolor:     black   # axes edge color
axes.linewidth:     0.8     # edge line width
axes.grid:          True   # display grid or not
axes.grid.axis:     both    # which axis the grid should apply to
axes.grid.which:    major   # grid lines at {major, minor, both} ticks
axes.titlelocation: center  # alignment of the title: {left, right, center}
axes.titlesize:     25   # font size of the axes title
axes.titleweight:   bold  # font weight of title
axes.titlecolor:    auto    # color of the axes title, auto falls back to
                            # text.color as default value
axes.titley:        None    # position title (axes relative units).  None implies auto
axes.titlepad:      6.0     # pad between axes and title in points
axes.labelsize:     20  # font size of the x and y labels
axes.labelpad:      5.0     # space between label and axis
axes.labelweight:   bold  # weight of the x and y labels
axes.labelcolor:    black
axes.axisbelow:     line    # draw axis gridlines and ticks:
                            #     - below patches (True)
                            #     - above patches but below lines ('line')
                            #     - above all (False)
axes.spines.left:   True  # display axis spines
axes.spines.bottom: True
axes.spines.top:    True
axes.spines.right:  True

axes.prop_cycle: cycler('color', ['00A08A', 'FF0000', 'F2AD00', 'F98400', '5BBCD6', 'E6A0C4', 'C6CDF7', 'D8A499', '7294D4'])
                 # color cycle for plot lines as list of string color specs:
                 # single letter, long name, or web-style hex
                 # As opposed to all other parameters in this file, the color
                 # values must be enclosed in quotes for this parameter,
                 # e.g. '1f77b4', instead of 1f77b4.
                 # See also https://matplotlib.org/tutorials/intermediate/color_cycle.html
                 # for more details on prop_cycle usage.
axes.xmargin:   .1  # x margin.  See `axes.Axes.margins`
axes.ymargin:   .1  # y margin.  See `axes.Axes.margins`
axes.zmargin:   .1  # z margin.  See `axes.Axes.margins`
axes.autolimit_mode: data  # If "data", use axes.xmargin and axes.ymargin as is.
                           # If "round_numbers", after application of margins, axis
                           # limits are further expanded to the nearest "round" number.
polaraxes.grid: True  # display grid on polar axes
axes3d.grid:    True  # display grid on 3D axes

xaxis.labellocation: center  # alignment of the xaxis label: {left, right, center}
yaxis.labellocation: center  # alignment of the yaxis label: {bottom, top, center}


### TICKS
# see https://matplotlib.org/api/axis_api.html#matplotlib.axis.Tick

xtick.top:           False   # draw ticks on the top side
xtick.bottom:        True    # draw ticks on the bottom side
xtick.labeltop:      False   # draw label on the top
xtick.labelbottom:   True    # draw label on the bottom
xtick.major.size:    5     # major tick size in points
xtick.minor.size:    3       # minor tick size in points
xtick.major.width:   1     # major tick width in points
xtick.minor.width:   0.6     # minor tick width in points
xtick.major.pad:     3.5     # distance to major tick label in points
xtick.minor.pad:     3.4     # distance to the minor tick label in points
xtick.color:         black   # color of the ticks
xtick.labelcolor:    inherit # color of the tick labels or inherit from xtick.color
xtick.labelsize:     15  # font size of the tick labels
xtick.direction:     out     # direction: {in, out, inout}
xtick.minor.visible: False   # visibility of minor ticks on x-axis
xtick.major.top:     True    # draw x axis top major ticks
xtick.major.bottom:  True    # draw x axis bottom major ticks
xtick.minor.top:     True    # draw x axis top minor ticks
xtick.minor.bottom:  True    # draw x axis bottom minor ticks
xtick.alignment:     center  # alignment of xticks

ytick.left:          True    # draw ticks on the left side
ytick.right:         False   # draw ticks on the right side
ytick.labelleft:     True    # draw tick labels on the left side
ytick.labelright:    False   # draw tick labels on the right side
ytick.major.size:    5     # major tick size in points
ytick.minor.size:    3       # minor tick size in points
ytick.major.width:   1     # major tick width in points
ytick.minor.width:   0.6     # minor tick width in points
ytick.major.pad:     3.5     # distance to major tick label in points
ytick.minor.pad:     3.4     # distance to the minor tick label in points
ytick.color:         black   # color of the ticks
ytick.labelcolor:    inherit # color of the tick labels or inherit from ytick.color
ytick.labelsize:     15  # font size of the tick labels
ytick.direction:     out     # direction: {in, out, inout}
ytick.minor.visible: False   # visibility of minor ticks on y-axis
ytick.major.left:    True    # draw y axis left major ticks
ytick.major.right:   True    # draw y axis right major ticks
ytick.minor.left:    True    # draw y axis left minor ticks
ytick.minor.right:   True    # draw y axis right minor ticks
ytick.alignment:     center_baseline  # alignment of yticks

### GRIDS
grid.color       :   'gray'      # grid color
grid.linestyle   :   -       # dotted
grid.linewidth   :   0.8     # in points
grid.alpha       :   0.7     # transparency, between 0.0 and 1.0

### Legend
legend.loc:           best
legend.frameon:       True     # if True, draw the legend on a background patch
legend.framealpha:    0.8      # legend patch transparency
legend.facecolor:     inherit  # inherit from axes.facecolor; or color spec
legend.edgecolor:     0.8      # background patch boundary color
legend.fancybox:      True     # if True, use a rounded box for the
                               # legend background, else a rectangle
legend.shadow:        False    # if True, give background a shadow effect
legend.numpoints:     1        # the number of marker points in the legend line
legend.scatterpoints: 1        # number of scatter points
legend.markerscale:   1.5      # the relative size of legend markers vs. original
legend.fontsize:      20
legend.title_fontsize: None    # None sets to the same as the default axes.

# Dimensions as fraction of font size:
legend.borderpad:     0.4  # border whitespace
legend.labelspacing:  0.5  # the vertical space between the legend entries
legend.handlelength:  2.0  # the length of the legend lines
legend.handleheight:  0.7  # the height of the legend handle
legend.handletextpad: 0.8  # the space between the legend line and legend text
legend.borderaxespad: 0.5  # the border between the axes and legend edge
legend.columnspacing: 2.0  # column separation


### FIGURE
# See https://matplotlib.org/api/figure_api.html#matplotlib.figure.Figure
figure.titlesize : 25     # size of the figure title
figure.titleweight : bold   # weight of the figure title
figure.figsize   : 10, 10    # figure size in inches
figure.dpi       : 150      # figure dots per inch
figure.facecolor : white   # figure facecolor; 0.75 is scalar gray
figure.edgecolor : white       # figure edgecolor
figure.autolayout : True  # When True, automatically adjust subplot
                           # parameters to make the plot fit the figure
figure.frameon : True

# The figure subplot parameters.  All dimensions are a fraction of the
# figure width or height
figure.subplot.left    : 0.1  # the left side of the subplots of the figure
figure.subplot.right   : 0.7    # the right side of the subplots of the figure
figure.subplot.bottom  : 0.05    # the bottom of the subplots of the figure
figure.subplot.top     : 0.5    # the top of the subplots of the figure
figure.subplot.wspace  : 0.25    # the amount of width reserved for space between subplots,
                                # expressed as a fraction of the average axis width
figure.subplot.hspace  : 0.25    # the amount of height reserved for space between subplots,
                                # expressed as a fraction of the average axis height

### IMAGES
image.aspect : equal             # equal | auto | a number
image.interpolation  : antialiased  # see help(imshow) for options
image.cmap   : inferno               # gray | jet | ...
image.lut    : 256               # the size of the colormap lookup table
image.origin : upper             # lower | upper
image.resample  : True
image.composite_image : True

### CONTOUR PLOTS
contour.negative_linestyle: dashed  # string or on-off ink sequence
contour.corner_mask:        True    # {True, False}
contour.linewidth:          None    # {float, None} Size of the contour line
                                     # widths. If set to None, it falls back to
                                     # `line.linewidth`.

# errorbar props
errorbar.capsize: 3

# scatter props
scatter.marker: o
scatter.edgecolors: face  # The default edge colors for scatter plots.

### Boxplots
boxplot.notch:       False
boxplot.vertical:    True
boxplot.whiskers:    1.5
boxplot.bootstrap:   None
boxplot.patchartist: False
boxplot.showmeans:   False
boxplot.showcaps:    True
boxplot.showbox:     True
boxplot.showfliers:  True
boxplot.meanline:    False
boxplot.flierprops.color:           black
boxplot.flierprops.marker:          o
boxplot.flierprops.markerfacecolor: none
boxplot.flierprops.markeredgecolor: black
boxplot.flierprops.markeredgewidth: 1.0
boxplot.flierprops.markersize:      6
boxplot.flierprops.linestyle:       none
boxplot.flierprops.linewidth:       1.0
boxplot.boxprops.color:     black
boxplot.boxprops.linewidth: 1.0
boxplot.boxprops.linestyle: -
boxplot.whiskerprops.color:     black
boxplot.whiskerprops.linewidth: 1.0
boxplot.whiskerprops.linestyle: -
boxplot.capprops.color:     black
boxplot.capprops.linewidth: 1.0
boxplot.capprops.linestyle: -
boxplot.medianprops.color:     C1
boxplot.medianprops.linewidth: 1.0
boxplot.medianprops.linestyle: -
boxplot.meanprops.color:           C2
boxplot.meanprops.marker:          ^
boxplot.meanprops.markerfacecolor: C2
boxplot.meanprops.markeredgecolor: C2
boxplot.meanprops.markersize:       6
boxplot.meanprops.linestyle:       --
boxplot.meanprops.linewidth:       1.0


# the default savefig params can be different from the display params
# e.g., you may want a higher resolution, or to make the figure
# background white
savefig.dpi         : figure      # figure dots per inch
savefig.facecolor   : auto        # figure facecolor when saving
savefig.edgecolor   : auto        # figure edgecolor when saving
savefig.format      : svg      # png, ps, pdf, svg
savefig.bbox        : standard # 'tight' or 'standard'.
                               # 'tight' is incompatible with pipe-based animation
                               # backends (e.g. 'ffmpeg') but will work with those
                               # based on temporary files (e.g. 'ffmpeg_file')
savefig.pad_inches  : 0.05      # Padding to be used when bbox is set to 'tight'


